package GUI;

import DatabaseControllers.DataBaseManager;
import Entities.*;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author henriqueandras
 */
public class RegisterPropertyGUI extends javax.swing.JFrame {

    /** Creates new form RegisterPropertyGUI */
    public static String username = null;   
    public RegisterPropertyGUI(String username) {
        this.username = username;
        initComponents();
    }
    
    public static boolean isNumeric(String strNum) {
    if (strNum == null) {
        return false;
    }
    try {
        double d = Double.parseDouble(strNum);
    } catch (NumberFormatException nfe) {
        return false;
    }
    return true;
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PBackground = new javax.swing.JPanel();
        LRegister = new javax.swing.JLabel();
        LPropertyType = new javax.swing.JLabel();
        LNumbeOfBedrooms = new javax.swing.JLabel();
        LNumberOfBathrooms = new javax.swing.JLabel();
        LFurnished = new javax.swing.JLabel();
        LQuadrant = new javax.swing.JLabel();
        LPrice = new javax.swing.JLabel();
        CPropertyType = new javax.swing.JComboBox<>();
        TNumberOfBedrooms = new javax.swing.JTextField();
        TNumberOfBathrooms = new javax.swing.JTextField();
        CFurnished = new javax.swing.JCheckBox();
        CQuadrant = new javax.swing.JComboBox<>();
        CPrice = new javax.swing.JTextField();
        BSubmit = new javax.swing.JButton();
        LError = new javax.swing.JLabel();
        BBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PBackground.setBackground(new java.awt.Color(51, 153, 255));

        LRegister.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 24)); // NOI18N
        LRegister.setForeground(new java.awt.Color(255, 255, 255));
        LRegister.setText("Register new Property");

        LPropertyType.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        LPropertyType.setForeground(new java.awt.Color(255, 255, 255));
        LPropertyType.setText("Property Type");

        LNumbeOfBedrooms.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        LNumbeOfBedrooms.setForeground(new java.awt.Color(255, 255, 255));
        LNumbeOfBedrooms.setText("Number of Bedrooms");

        LNumberOfBathrooms.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        LNumberOfBathrooms.setForeground(new java.awt.Color(255, 255, 255));
        LNumberOfBathrooms.setText("Number of Bathrooms");

        LFurnished.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        LFurnished.setForeground(new java.awt.Color(255, 255, 255));
        LFurnished.setText("Furnished");

        LQuadrant.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        LQuadrant.setForeground(new java.awt.Color(255, 255, 255));
        LQuadrant.setText("Quadrant");

        LPrice.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        LPrice.setForeground(new java.awt.Color(255, 255, 255));
        LPrice.setText("Price");

        CPropertyType.setBackground(new java.awt.Color(255, 255, 255));
        CPropertyType.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        CPropertyType.setForeground(new java.awt.Color(102, 102, 102));
        CPropertyType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apartment", "Attached House", "Detached House", "Townhouse" }));
        CPropertyType.setBorder(null);

        TNumberOfBedrooms.setBackground(new java.awt.Color(255, 255, 255));
        TNumberOfBedrooms.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        TNumberOfBedrooms.setForeground(new java.awt.Color(102, 102, 102));
        TNumberOfBedrooms.setBorder(null);

        TNumberOfBathrooms.setBackground(new java.awt.Color(255, 255, 255));
        TNumberOfBathrooms.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        TNumberOfBathrooms.setForeground(new java.awt.Color(102, 102, 102));
        TNumberOfBathrooms.setBorder(null);

        CFurnished.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        CFurnished.setForeground(new java.awt.Color(255, 255, 255));

        CQuadrant.setBackground(new java.awt.Color(255, 255, 255));
        CQuadrant.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        CQuadrant.setForeground(new java.awt.Color(102, 102, 102));
        CQuadrant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NW", "NE", "SW", "SE" }));
        CQuadrant.setBorder(null);

        CPrice.setBackground(new java.awt.Color(255, 255, 255));
        CPrice.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        CPrice.setForeground(new java.awt.Color(102, 102, 102));
        CPrice.setBorder(null);

        BSubmit.setBackground(new java.awt.Color(255, 204, 0));
        BSubmit.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 13)); // NOI18N
        BSubmit.setForeground(new java.awt.Color(255, 255, 255));
        BSubmit.setText("Submit");
        BSubmit.setBorderPainted(false);
        BSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSubmitActionPerformed(evt);
            }
        });

        LError.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        LError.setForeground(new java.awt.Color(255, 0, 0));
        LError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LError.setToolTipText("");

        BBack.setBackground(new java.awt.Color(51, 153, 255));
        BBack.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        BBack.setForeground(new java.awt.Color(255, 255, 255));
        BBack.setText("Back");
        BBack.setBorder(null);
        BBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBackActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout PBackgroundLayout = new org.jdesktop.layout.GroupLayout(PBackground);
        PBackground.setLayout(PBackgroundLayout);
        PBackgroundLayout.setHorizontalGroup(
            PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PBackgroundLayout.createSequentialGroup()
                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(PBackgroundLayout.createSequentialGroup()
                        .add(284, 284, 284)
                        .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(PBackgroundLayout.createSequentialGroup()
                                .add(LPrice)
                                .add(34, 34, 34)
                                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(BSubmit)
                                    .add(CPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(PBackgroundLayout.createSequentialGroup()
                                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(LNumbeOfBedrooms)
                                    .add(LPropertyType)
                                    .add(LNumberOfBathrooms)
                                    .add(LFurnished)
                                    .add(LQuadrant))
                                .add(34, 34, 34)
                                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(CPropertyType, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(TNumberOfBedrooms)
                                    .add(TNumberOfBathrooms)
                                    .add(CFurnished)
                                    .add(CQuadrant, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 235, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(PBackgroundLayout.createSequentialGroup()
                        .add(19, 19, 19)
                        .add(BBack, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(314, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, PBackgroundLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, PBackgroundLayout.createSequentialGroup()
                        .add(LRegister)
                        .add(356, 356, 356))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, PBackgroundLayout.createSequentialGroup()
                        .add(LError, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 244, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(388, 388, 388))))
        );
        PBackgroundLayout.setVerticalGroup(
            PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PBackgroundLayout.createSequentialGroup()
                .add(19, 19, 19)
                .add(BBack, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(21, 21, 21)
                .add(LRegister)
                .add(62, 62, 62)
                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(LPropertyType)
                    .add(CPropertyType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(28, 28, 28)
                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(LNumbeOfBedrooms)
                    .add(PBackgroundLayout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(TNumberOfBedrooms, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(LNumberOfBathrooms)
                    .add(PBackgroundLayout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(TNumberOfBathrooms, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(LFurnished)
                    .add(CFurnished))
                .add(26, 26, 26)
                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(LQuadrant)
                    .add(CQuadrant, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(PBackgroundLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(LPrice)
                    .add(CPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(35, 35, 35)
                .add(BSubmit)
                .add(18, 18, 18)
                .add(LError, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PBackground, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(PBackground, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSubmitActionPerformed
        // TODO add your handling code here:
        String propertyType = CPropertyType.getSelectedItem().toString();
        propertyType = propertyType.replaceAll(" ", "_");
        String strBed = TNumberOfBedrooms.getText();
        String strBath = TNumberOfBathrooms.getText();
        String strPrice = CPrice.getText();
        boolean furnished = CFurnished.isSelected();
        String quadrant = CQuadrant.getSelectedItem().toString();
        
        if(strBed.equals("") || strBath.equals("")  || strPrice.equals("") ) {
            LError.setText("Failed: all the fields are required.");
            return;
        }
        
        if(!isNumeric(strBed) || !isNumeric(strBath) || !isNumeric(strPrice)) {
            LError.setText("Failed: invalid data types.");
            return;
        }
        
        int bedrooms = Integer.parseInt(strBed);
        int bathrooms = Integer.parseInt(strBath);
        double price = Double.parseDouble(strPrice);
        Property newProperty = new Property(username, propertyType, bedrooms, bathrooms, furnished, quadrant, price);
        DataBaseManager.getInstance().addProperty(newProperty);
        ArrayList<savedSearch> matchingSearches = DataBaseManager.getInstance().checkSavedSearch(newProperty);
        for(savedSearch current: matchingSearches){
            current.getSubscribers();
            current.notifyAllSubscribers();
        }
        LandlordGUI myLandlord = new LandlordGUI(username);
        myLandlord.setVisible(true);
        dispose();
    }//GEN-LAST:event_BSubmitActionPerformed

    private void BBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBackActionPerformed
        // TODO add your handling code here:
        LandlordGUI myLandlord = new LandlordGUI(username);
        myLandlord.setVisible(true);
        dispose();
    }//GEN-LAST:event_BBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterPropertyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterPropertyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterPropertyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterPropertyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterPropertyGUI(username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBack;
    private javax.swing.JButton BSubmit;
    private javax.swing.JCheckBox CFurnished;
    private javax.swing.JTextField CPrice;
    private javax.swing.JComboBox<String> CPropertyType;
    private javax.swing.JComboBox<String> CQuadrant;
    private javax.swing.JLabel LError;
    private javax.swing.JLabel LFurnished;
    private javax.swing.JLabel LNumbeOfBedrooms;
    private javax.swing.JLabel LNumberOfBathrooms;
    private javax.swing.JLabel LPrice;
    private javax.swing.JLabel LPropertyType;
    private javax.swing.JLabel LQuadrant;
    private javax.swing.JLabel LRegister;
    private javax.swing.JPanel PBackground;
    private javax.swing.JTextField TNumberOfBathrooms;
    private javax.swing.JTextField TNumberOfBedrooms;
    // End of variables declaration//GEN-END:variables

}
